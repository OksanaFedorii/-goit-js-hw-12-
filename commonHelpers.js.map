{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-function.js","../src/main.js"],"sourcesContent":["const API_KEY = '43843798-e4c61f3cfe0ada13281a73887';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport const fetchPhotosByQuery = (q) => {\n    const searchParams = new URLSearchParams({\n        q,\n        key: API_KEY,\n        per_page: 20,\n        image_type: \"photo\",\n        orientation: 'horizontal',\n        safesearch: true\n    });\n\n    return fetch(`${BASE_URL}?${searchParams}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return response.json();\n        });\n};\n","export function createGalleryItemMarkup(items) {\n    return items.map(item => `\n        <a href=\"${item.largeImageURL}\" class=\"gallery-item\" data-lightbox=\"gallery\">\n            <img src=\"${item.webformatURL}\" alt=\"${item.tags}\" />\n            <div class=\"card-body\">\n              <ul class=\"list-group list-group-flush\">\n                <li class=\"list-group-item\"><strong>Likes</strong> ${item.likes}</li>\n                <li class=\"list-group-item\"><strong>Views</strong> ${item.views}</li>\n                <li class=\"list-group-item\"><strong>Comments</strong> ${item.comments}</li>\n                <li class=\"list-group-item\"><strong>Downloads</strong> ${item.downloads}</li>\n              </ul>\n            </div>\n        </a>   \n    `).join('');\n};\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { fetchPhotosByQuery } from './js/pixabay-api.js';\nimport { createGalleryItemMarkup } from './js/render-function.js';\n\ndocument.addEventListener('DOMContentLoaded', function () {\n    const form = document.querySelector('.js-search-form');\n    const galleryEl = document.querySelector('.js-gallery');\n    const loaderEl = document.querySelector('.js-loader');\n\n    form.addEventListener('submit', function (event) {\n        event.preventDefault();\n        const input = document.querySelector('.js-search-input');\n        const searchQuery = input.value.trim();\n\n        if (searchQuery === '') {\n            galleryEl.innerHTML = '';\n            input.value = '';\n            iziToast.show({\n                message: 'Input field can not be empty',\n                position: 'topRight',\n                timeout: 2000,\n                color: 'red',\n            });\n            return;\n        }\n\n        galleryEl.innerHTML = '';\n        loaderEl.classList.remove('is-hidden');\n\n        fetchPhotosByQuery(searchQuery)\n            .then(data => {\n                if (data.totalHits === 0) {\n                    iziToast.show({\n                        message: 'Sorry, there are no images for this query',\n                        position: 'topRight',\n                        timeout: 2000,\n                        color: 'red',\n                    });\n                } else {\n                    galleryEl.innerHTML = createGalleryItemMarkup(data.hits);\n                    initializeLightbox();\n                }\n            })\n            .catch(error => {\n                console.error('Fetch error:', error);\n                iziToast.show({\n                    message: 'Failed to load images',\n                    position: 'topRight',\n                    timeout: 2000,\n                    color: 'red',\n                });\n            })\n            .finally(() => {\n                input.value = '';\n                loaderEl.classList.add('is-hidden');\n            });\n    });\n});\n\nfunction initializeLightbox() {\n    const lightbox = new SimpleLightbox('.gallery a', {\n        overlayOpacity: 1,\n        captionsData: 'alt',\n        captionsDelay: 250,\n        nav: true,\n        close: true,\n        showCounter: true,\n        animationSpeed: 300,\n        fadeSpeed: 300,\n    });\n\n    lightbox.refresh();\n}"],"names":["API_KEY","BASE_URL","fetchPhotosByQuery","q","searchParams","response","createGalleryItemMarkup","items","item","form","galleryEl","loaderEl","event","input","searchQuery","iziToast","data","initializeLightbox","error","SimpleLightbox"],"mappings":"6vBAAA,MAAMA,EAAU,qCACVC,EAAW,2BAEJC,EAAsBC,GAAM,CACrC,MAAMC,EAAe,IAAI,gBAAgB,CACrC,EAAAD,EACA,IAAKH,EACL,SAAU,GACV,WAAY,QACZ,YAAa,aACb,WAAY,EACpB,CAAK,EAED,OAAO,MAAM,GAAGC,CAAQ,IAAIG,CAAY,EAAE,EACrC,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAM,6BAA6B,EAEjD,OAAOA,EAAS,MAC5B,CAAS,CACT,ECpBO,SAASC,EAAwBC,EAAO,CAC3C,OAAOA,EAAM,IAAIC,GAAQ;AAAA,mBACVA,EAAK,aAAa;AAAA,wBACbA,EAAK,YAAY,UAAUA,EAAK,IAAI;AAAA;AAAA;AAAA,qEAGSA,EAAK,KAAK;AAAA,qEACVA,EAAK,KAAK;AAAA,wEACPA,EAAK,QAAQ;AAAA,yEACZA,EAAK,SAAS;AAAA;AAAA;AAAA;AAAA,KAIlF,EAAE,KAAK,EAAE,CACd,CCPA,SAAS,iBAAiB,mBAAoB,UAAY,CACtD,MAAMC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAW,SAAS,cAAc,YAAY,EAEpDF,EAAK,iBAAiB,SAAU,SAAUG,EAAO,CAC7CA,EAAM,eAAc,EACpB,MAAMC,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAcD,EAAM,MAAM,KAAI,EAEpC,GAAIC,IAAgB,GAAI,CACpBJ,EAAU,UAAY,GACtBG,EAAM,MAAQ,GACdE,EAAS,KAAK,CACV,QAAS,+BACT,SAAU,WACV,QAAS,IACT,MAAO,KACvB,CAAa,EACD,MACH,CAEDL,EAAU,UAAY,GACtBC,EAAS,UAAU,OAAO,WAAW,EAErCT,EAAmBY,CAAW,EACzB,KAAKE,GAAQ,CACNA,EAAK,YAAc,EACnBD,EAAS,KAAK,CACV,QAAS,4CACT,SAAU,WACV,QAAS,IACT,MAAO,KAC/B,CAAqB,GAEDL,EAAU,UAAYJ,EAAwBU,EAAK,IAAI,EACvDC,IAEpB,CAAa,EACA,MAAMC,GAAS,CACZ,QAAQ,MAAM,eAAgBA,CAAK,EACnCH,EAAS,KAAK,CACV,QAAS,wBACT,SAAU,WACV,QAAS,IACT,MAAO,KAC3B,CAAiB,CACjB,CAAa,EACA,QAAQ,IAAM,CACXF,EAAM,MAAQ,GACdF,EAAS,UAAU,IAAI,WAAW,CAClD,CAAa,CACb,CAAK,CACL,CAAC,EAED,SAASM,GAAqB,CACT,IAAIE,EAAe,aAAc,CAC9C,eAAgB,EAChB,aAAc,MACd,cAAe,IACf,IAAK,GACL,MAAO,GACP,YAAa,GACb,eAAgB,IAChB,UAAW,GACnB,CAAK,EAEQ,QAAO,CACpB"}
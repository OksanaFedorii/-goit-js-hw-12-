{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst API_KEY = '43843798-e4c61f3cfe0ada13281a73887';\nconst BASE_URL = 'https://pixabay.com/api/'; \n\ndocument.addEventListener('DOMContentLoaded', function() {\n    const form = document.querySelector('.js-search-form'); \n    const galleryEl = document.querySelector('.gallery'); \n\n    form.addEventListener('submit', function(event) {\n        event.preventDefault(); \n        const input = document.querySelector('.js-search-input'); \n        const inputValue = input.value; \n\n        fetchPhotosByQuery(inputValue) \n            .then(data => {\n                galleryEl.innerHTML = createGalleryItemMarkup(data.hits);\n                console.log(data.hits); \n            })\n            .catch(error => {\n                console.error('Fetch error:', error);\n            }); \n    });\n});\n\nexport const fetchPhotosByQuery = (q) => {\n    const searchParams = new URLSearchParams({\n        q,\n        key: API_KEY,\n        per_page: 20,\n        image_type: \"photo\",\n        orientation: 'horizontal',\n        safesearch: true\n    });\n\n    return fetch(`${BASE_URL}?${searchParams}`)\n        .then(response => {\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            return response.json();\n        });\n};\n\nexport function createGalleryItemMarkup(items) {\n    return items.map(item => `\n        <div class=\"gallery-item\">\n            <img src=\"${item.webformatURL}\" alt=\"${item.tags}\" />\n            <div class=\"card-body\">\n              <ul class=\"list-group list-group-flush\">\n                <li class=\"list-group-item\"><strong>Likes</strong> ${item.likes}</li>\n                <li class=\"list-group-item\"><strong>Views</strong> ${item.views}</li>\n                <li class=\"list-group-item\"><strong>Comments</strong> ${item.comments}</li>\n                <li class=\"list-group-item\"><strong>Downloads</strong> ${item.downloads}</li>\n              </ul>\n            </div>\n        </div>   \n    `).join('');\n}","import iziToast from 'izitoast';\nimport { createGalleryItemMarkup } from './js/pixabay-api.js';\nimport { fetchPhotosByQuery } from './js/pixabay-api.js';\nimport 'izitoast/dist/css/iziToast.min.css';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  const form = document.querySelector('.js-search-form');\n  const galleryEl = document.querySelector('.gallery');\n  const loaderEl = document.querySelector('.loader'); \n\n  form.addEventListener('submit', function(event) {\n      event.preventDefault();\n      const input = document.querySelector('.js-search-input');\n      const searchQuery = input.value.trim(); \n\n      if (searchQuery === '') {\n          galleryEl.innerHTML = '';\n          input.value = ''; \n          iziToast.show({\n              message: 'Input field can not be empty',\n              position: 'topRight',\n              timeout: 2000,\n              color: 'red',\n          });\n          return;\n      }\n\n      galleryEl.innerHTML = '';\n      loaderEl.classList.remove('is-hidden'); \n\n      fetchPhotosByQuery(searchQuery)\n          .then(data => {\n              if (data.totalHits === 0) {\n                  iziToast.show({\n                      message: 'Sorry, there are no images for this query',\n                      position: 'topRight',\n                      timeout: 2000,\n                      color: 'red',\n                  });\n              } else {\n                  galleryEl.innerHTML = createGalleryItemMarkup(data.hits);\n              }\n          })\n          .catch(error => {\n              console.error('Fetch error:', error);\n              iziToast.show({\n                  message: 'Failed to load images',\n                  position: 'topRight',\n                  timeout: 2000,\n                  color: 'red',\n              });\n          })\n          .finally(() => {\n              input.value = ''; \n              loaderEl.classList.add('is-hidden');\n          });\n  });\n});\n"],"names":["API_KEY","BASE_URL","form","galleryEl","event","inputValue","fetchPhotosByQuery","data","createGalleryItemMarkup","error","q","searchParams","response","items","item","loaderEl","input","searchQuery","iziToast"],"mappings":"svBAGA,MAAMA,EAAU,qCACVC,EAAW,2BAEjB,SAAS,iBAAiB,mBAAoB,UAAW,CACrD,MAAMC,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAY,SAAS,cAAc,UAAU,EAEnDD,EAAK,iBAAiB,SAAU,SAASE,EAAO,CAC5CA,EAAM,eAAc,EAEpB,MAAMC,EADQ,SAAS,cAAc,kBAAkB,EAC9B,MAEzBC,EAAmBD,CAAU,EACxB,KAAKE,GAAQ,CACVJ,EAAU,UAAYK,EAAwBD,EAAK,IAAI,EACvD,QAAQ,IAAIA,EAAK,IAAI,CACrC,CAAa,EACA,MAAME,GAAS,CACZ,QAAQ,MAAM,eAAgBA,CAAK,CACnD,CAAa,CACb,CAAK,CACL,CAAC,EAEM,MAAMH,EAAsBI,GAAM,CACrC,MAAMC,EAAe,IAAI,gBAAgB,CACrC,EAAAD,EACA,IAAKV,EACL,SAAU,GACV,WAAY,QACZ,YAAa,aACb,WAAY,EACpB,CAAK,EAED,OAAO,MAAM,GAAGC,CAAQ,IAAIU,CAAY,EAAE,EACrC,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACV,MAAM,IAAI,MAAM,6BAA6B,EAEjD,OAAOA,EAAS,MAC5B,CAAS,CACT,EAEO,SAASJ,EAAwBK,EAAO,CAC3C,OAAOA,EAAM,IAAIC,GAAQ;AAAA;AAAA,wBAELA,EAAK,YAAY,UAAUA,EAAK,IAAI;AAAA;AAAA;AAAA,qEAGSA,EAAK,KAAK;AAAA,qEACVA,EAAK,KAAK;AAAA,wEACPA,EAAK,QAAQ;AAAA,yEACZA,EAAK,SAAS;AAAA;AAAA;AAAA;AAAA,KAIlF,EAAE,KAAK,EAAE,CACd,CCtDA,SAAS,iBAAiB,mBAAoB,UAAW,CACvD,MAAMZ,EAAO,SAAS,cAAc,iBAAiB,EAC/CC,EAAY,SAAS,cAAc,UAAU,EAC7CY,EAAW,SAAS,cAAc,SAAS,EAEjDb,EAAK,iBAAiB,SAAU,SAASE,EAAO,CAC5CA,EAAM,eAAc,EACpB,MAAMY,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAcD,EAAM,MAAM,KAAI,EAEpC,GAAIC,IAAgB,GAAI,CACpBd,EAAU,UAAY,GACtBa,EAAM,MAAQ,GACdE,EAAS,KAAK,CACV,QAAS,+BACT,SAAU,WACV,QAAS,IACT,MAAO,KACrB,CAAW,EACD,MACH,CAEDf,EAAU,UAAY,GACtBY,EAAS,UAAU,OAAO,WAAW,EAErCT,EAAmBW,CAAW,EACzB,KAAKV,GAAQ,CACNA,EAAK,YAAc,EACnBW,EAAS,KAAK,CACV,QAAS,4CACT,SAAU,WACV,QAAS,IACT,MAAO,KAC7B,CAAmB,EAEDf,EAAU,UAAYK,EAAwBD,EAAK,IAAI,CAEzE,CAAW,EACA,MAAME,GAAS,CACZ,QAAQ,MAAM,eAAgBA,CAAK,EACnCS,EAAS,KAAK,CACV,QAAS,wBACT,SAAU,WACV,QAAS,IACT,MAAO,KACzB,CAAe,CACf,CAAW,EACA,QAAQ,IAAM,CACXF,EAAM,MAAQ,GACdD,EAAS,UAAU,IAAI,WAAW,CAChD,CAAW,CACX,CAAG,CACH,CAAC"}